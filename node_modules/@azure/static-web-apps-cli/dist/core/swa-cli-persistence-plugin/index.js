"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.swaCliPersistencePlugin = void 0;
const utils_1 = require("../utils");
const persistence_cache_plugin_1 = require("./persistence-cache-plugin");
async function createSWAPersistenceCachePlugin(options) {
    return new persistence_cache_plugin_1.SWACLIPersistenceCachePlugin(options);
}
/**
 * A plugin that provides persistent token caching for `@azure/identity`
 * credentials. The plugin API is compatible with `@azure/identity` versions
 * 2.0.0 and later. Load this plugin using the `useIdentityPlugin`
 * function, imported from `@azure/identity`.
 *
 * In order to enable this functionality, you must also pass
 * `tokenCachePersistenceOptions` to your credential constructors with an
 * `enabled` property set to true.
 *
 * Example:
 *
 * ```javascript
 * import { useIdentityPlugin, DeviceCodeCredential } from "@azure/identity";
 * import { swaCliPersistencePlugin } from "@azure/static-web-apps-cli";
 *
 * // Load the plugin
 * useIdentityPlugin(swaCliPersistencePlugin);
 *
 * const credential = new DeviceCodeCredential({
 *   tokenCachePersistenceOptions: {
 *     enabled: true
 *   }
 * });
 * ```
 */
const swaCliPersistencePlugin = (context) => {
    utils_1.logger.silly("Executing swaCliPersistencePlugin");
    const { cachePluginControl } = context;
    cachePluginControl.setPersistence(createSWAPersistenceCachePlugin);
};
exports.swaCliPersistencePlugin = swaCliPersistencePlugin;
//# sourceMappingURL=index.js.map