/**
 * Check if the StaticWebAppsAuthCookie is available.
 * @param cookieValue The cookie value.
 * @returns True if StaticWebAppsAuthCookie is found. False otherwise.
 */
export declare function validateCookie(cookieValue: string | number | string[]): boolean;
/**
 * Serialize a cookie name-value pair into a string that can be used in Set-Cookie header.
 * @param cookieName The name for the cookie.
 * @param cookieValue The value to set the cookie to.
 * @param options An object containing serialization options
 * @throws {TypeError} when maxAge options is invalid.
 * @returns The serialized value.
 */
export declare function serializeCookie(cookieName: string, cookieValue: string, options: any): string;
/**
 *
 * @param cookieValue
 * @returns A ClientPrincipal object.
 */
export declare function decodeCookie(cookieValue: string): ClientPrincipal | null;
//# sourceMappingURL=cookie.d.ts.map