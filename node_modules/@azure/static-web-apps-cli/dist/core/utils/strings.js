"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasSpaces = exports.removeTrailingPathSep = exports.stripJsonComments = exports.dasherize = void 0;
function dasherize(str) {
    return str
        .replace(/([a-z\d])([A-Z]+)/g, "$1-$2")
        .replace(/[ _]+/g, "-")
        .toLowerCase();
}
exports.dasherize = dasherize;
function stripJsonComments(json) {
    return json.replace(
    // 1. \\" matches escaped double quotes to avoid being captured by the removing groups
    // 2. "(?:\\"|[^"])*" matches anything inside double quotes, including escaped double quotes
    //    in a non-capturing group to avoid removing anything inside strings
    // 3. (\/\/.*|\/\*[\s\S]*?\*\/) capture anything after a double slash until newline, or
    //    in-between slash-star comments including newlines in a non-greedy way
    // Only the captured group is removed, ignoring comments inside strings as a result
    /\\"|"(?:\\"|[^"])*"|(\/\/.*|\/\*[\s\S]*?\*\/)/gm, (match, group) => (group ? "" : match));
}
exports.stripJsonComments = stripJsonComments;
function removeTrailingPathSep(filePath) {
    return filePath.replace(/[\\/]+$/, "");
}
exports.removeTrailingPathSep = removeTrailingPathSep;
const hasSpaces = (str) => str.indexOf(" ") !== -1;
exports.hasSpaces = hasSpaces;
//# sourceMappingURL=strings.js.map