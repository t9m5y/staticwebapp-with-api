"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMimeTypeForExtension = exports.mimeTypes = void 0;
const chalk_1 = __importDefault(require("chalk"));
const path_1 = __importDefault(require("path"));
const core_1 = require("../../../core");
const constants_1 = require("../../../core/constants");
// See: https://docs.microsoft.com/azure/static-web-apps/configuration
async function mimeTypes(req, res, mimeTypes) {
    var _a, _b;
    if ((_a = req.url) === null || _a === void 0 ? void 0 : _a.includes(".")) {
        core_1.logger.silly(`checking mimeTypes rule`);
        const fileExtentionFromURL = (_b = req.url) === null || _b === void 0 ? void 0 : _b.split(".").pop();
        const overrideMimeType = mimeTypes === null || mimeTypes === void 0 ? void 0 : mimeTypes[`.${fileExtentionFromURL}`];
        if (fileExtentionFromURL && overrideMimeType) {
            res.setHeader("Content-Type", overrideMimeType);
        }
    }
}
exports.mimeTypes = mimeTypes;
function getMimeTypeForExtension(filePathFromRequest, customMimeType) {
    if (filePathFromRequest instanceof URL) {
        filePathFromRequest = filePathFromRequest.toString();
    }
    const extension = path_1.default.extname(filePathFromRequest);
    core_1.logger.silly(`checking mime types`);
    core_1.logger.silly(` - filePathFromRequest: ${chalk_1.default.yellow(filePathFromRequest)}`);
    core_1.logger.silly(` - extension: ${chalk_1.default.yellow(extension || "<empty>")}`);
    let mimeType = constants_1.MIME_TYPE_LIST[extension] || constants_1.DEFAULT_MIME_TYPE;
    if (customMimeType === null || customMimeType === void 0 ? void 0 : customMimeType[extension]) {
        mimeType = customMimeType[extension];
    }
    core_1.logger.silly(` - found: ${chalk_1.default.yellow(mimeType || "<undefined>")}`);
    return mimeType;
}
exports.getMimeTypeForExtension = getMimeTypeForExtension;
//# sourceMappingURL=mime-types.js.map